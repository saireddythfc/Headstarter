const x=(t,e)=>{let n;return(...o)=>{clearTimeout(n),n=setTimeout(()=>t(...o),e)}};var u=document.querySelector('div[role="textbox"]');u&&m(u);function m(t){new MutationObserver(n=>{n.forEach(o=>{const r=t.querySelector('span[data-text="true"]');if(r){const i=r.textContent;console.log("Text content of the span:",i),d(r)}})}).observe(t,{childList:!0,subtree:!0})}async function p(t){var l;if(!t)return"";const e={title:document.title,url:window.location.href,description:((l=document.querySelector('meta[name="description"]'))==null?void 0:l.content)||""},n=`You are an AI autocomplete assistant who will suggest a completion for the user's input. Ensure the response is to only complete the user's input which may or may not be a complete sentence.
  Here is the user's input: "${t}"
  Use the context of the website (title: ${e.title}, URL: ${e.url}, description: ${e.description}) if necessary to guide your response.`,{GoogleGenerativeAI:o}=require("@google/generative-ai");return(await new o("AIzaSyBX92zH-cl-WZQmNxvV8anxOBxGJajD5uo").getGenerativeModel({model:"gemini-1.5-flash"}).generateContent(n)).response.text()}function h(t){const e=t.tagName.toLowerCase(),n=t.getAttribute("role");return console.log(n),e==="input"||e==="textarea"||e==="div"&&t.isContentEditable}function c(t){return t.selectionStart!==void 0?t.selectionStart:0}function g(t,e){const n=t.nextElementSibling;n&&n.classList.contains("suggestion")&&n.remove();const o=c(t),r=t.value.slice(0,o);t.value.slice(o);const i=document.createElement("span");i.className="suggestion",i.textContent=e,t.parentNode.insertBefore(i,t.nextSibling);const s=t.getBoundingClientRect(),l=b(r,t);s.left+l,s.top;const a=11.5,f=11.5;i.style.position="absolute",i.style.left=`${s.left+l+a+window.scrollX}px`,i.style.top=`${s.top+f+window.scrollY}px`,i.style.color="#999"}function b(t,e){const o=document.createElement("canvas").getContext("2d"),r=window.getComputedStyle(e).font;return o.font=r,o.measureText(t).width}async function d(t){const e=t.target;var n=e.value;console.log("this is the event",t.target),console.log("this is user input",n);const o=t.target,r=o.getAttribute("role");if(!h(o)&&!o.isContentEditable)return;console.log("role in input",r);const i=e.nextElementSibling;if(i&&i.classList.contains("suggestion")&&i.remove(),o.isContentEditable){console.log("this is a content editable element",o.innerText);let s="";const l=document.createTreeWalker(o,NodeFilter.SHOW_TEXT,null,!1);let a;for(;a=l.nextNode();)s+=a.textContent;n=s,console.log("this is the user input",n)}if(n.length>3){let s;try{s=await p(n)}catch(l){console.error("Error fetching suggestion from Gemini:",l),s="Hey ya"}s&&(o.isContentEditable,g(o,s))}else{const s=e.nextElementSibling;s&&s.classList.contains("suggestion")&&s.remove()}}function y(t){if(t.ctrlKey&&t.key==="z"){const e=t.target;e.dataset.lastSuggestion&&(e.value=e.value.replace(e.dataset.lastSuggestion,""),delete e.dataset.lastSuggestion)}else if(t.key==="Tab"){const e=t.target,n=e.nextElementSibling;if(e.dataset.lastSuggestion=n.textContent,c(e),n&&n.classList.contains("suggestion")){t.preventDefault();const o=c(e);e.value+=n.textContent,n.remove();const r=o+n.textContent.length;e.setSelectionRange(r,r)}}}document.addEventListener("input",x(d,5));document.addEventListener("keydown",y);
